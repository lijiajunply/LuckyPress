// <auto-generated />
using System;
using LuckyPress.NetData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LuckyPress.NetData.Migrations
{
    [DbContext(typeof(PressContext))]
    [Migration("20250810070605_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("ArticleModelTagModel", b =>
                {
                    b.Property<string>("ArticlesId")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("TagsKey")
                        .HasColumnType("varchar(32)");

                    b.HasKey("ArticlesId", "TagsKey");

                    b.HasIndex("TagsKey");

                    b.ToTable("ArticleModelTagModel");
                });

            modelBuilder.Entity("LuckyPress.NetData.DataModels.ArticleModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Intro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastWriteTime")
                        .HasColumnType("DATE");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<int>("Watch")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("LuckyPress.NetData.DataModels.EMailModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.HasKey("Id");

                    b.ToTable("EMails");
                });

            modelBuilder.Entity("LuckyPress.NetData.DataModels.TagModel", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.HasKey("Key");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("LuckyPress.NetData.DataModels.UserModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginPos")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ArticleModelTagModel", b =>
                {
                    b.HasOne("LuckyPress.NetData.DataModels.ArticleModel", null)
                        .WithMany()
                        .HasForeignKey("ArticlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LuckyPress.NetData.DataModels.TagModel", null)
                        .WithMany()
                        .HasForeignKey("TagsKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
